heat_template_version: 2017-02-24

description: pFinalCNVR

parameters:

  extnet_name:
      type: string
      default: ExtNet
      description: ExtNet

  net1_name: 
      type: string 
      description: Net 1 name

  subnet1_name: 
      type: string 
      description: Subnet 1 name

  subnet1_prefix: 
      type: string 
      description: Subnet 1 prefix

  subnet1_gateway: 
    type: string 
    description: Subnet 1 gateway

  net2_name: 
    type: string 
    description: Net 2 name

  subnet2_name: 
    type: string 
    description: Subnet 2 name

  subnet2_prefix: 
    type: string 
    description: Subnet 2 prefix

  db_ip_address:
    type: string
    description: DB server IP

  

resources:
  open_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: open
      description: Allow all east-west traffic
      rules: [
        {remote_ip_prefix: 0.0.0.0/0}]

  keypair:
    type: OS::Nova::KeyPair
    properties:
      name: keypair
      save_private_key: true

  admin_server:
    type: OS::Nova::Server
    depends_on: [ keypair ]
    properties:
      name: admin_server
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      user_data_format: SOFTWARE_CONFIG
      user_data: { get_file: cloud-init/admin.yaml }
      key_name: { get_resource: keypair }
      networks:
        - port: { get_resource: admin_server_port0 }
        - port: { get_resource: admin_server_port1 }

  admin_server_port0:
    type: OS::Neutron::Port
    depends_on: [ open_security_group ]
    properties:
      network_id: { get_resource: net1 }
      security_groups:
        - open
      fixed_ips:
        - ip_address: 10.100.0.10

  admin_server_port1:
    type: OS::Neutron::Port
    depends_on: [ open_security_group ]
    properties:
      network_id: { get_resource: net2 }
      security_groups:
        - open
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }

  admin_server_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: extnet_name }
      port_id: { get_resource: admin_server_port0 }

  app_server_1:
    type: app_server.yaml
    depends_on: [ net1, subnet1, net2, subnet2 ]
    properties:
      server_name: app_server_1
      net1_name: { get_param: net1_name }
      subnet1_name: { get_param: subnet1_name }
      net2_name: { get_param: net2_name }
      subnet2_name: { get_param: subnet2_name }
      
  app_server_2:
    type: app_server.yaml
    depends_on: [ net1, subnet1, net2, subnet2 ]
    properties:
      server_name: app_server_2
      net1_name: { get_param: net1_name }
      subnet1_name: { get_param: subnet1_name }
      net2_name: { get_param: net2_name }
      subnet2_name: { get_param: subnet2_name }
      
  app_server_3:
    type: app_server.yaml
    depends_on: [ net1, subnet1, net2, subnet2 ]
    properties:
      server_name: app_server_3
      net1_name: { get_param: net1_name }
      subnet1_name: { get_param: subnet1_name }
      net2_name: { get_param: net2_name }
      subnet2_name: { get_param: subnet2_name }
      
  db_server:
    type: db_server.yaml
    depends_on: [ net2, subnet2 ]
    properties:
      server_name: db_server
      net2_name: { get_param: net2_name }
      subnet2_name: { get_param: subnet2_name }
      private_ip_address: { get_param: db_ip_address }

  net1: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: net1_name }

  subnet1: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: subnet1_name }
      network_id: { get_resource: net1 }
      cidr: { get_param: subnet1_prefix }
      gateway_ip: { get_param: subnet1_gateway }

  net2: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: net2_name }

  subnet2: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: subnet2_name }
      network_id: { get_resource: net2 }
      cidr: { get_param: subnet2_prefix }

  r0:
    type: OS::Neutron::Router
    properties:
      name: r0
      external_gateway_info: 
        network: { get_param: extnet_name }

  interfaz_router:
    type: OS::Neutron::RouterInterface
    depends_on: [ r0 ]
    properties:
      router: { get_resource: r0 }
      subnet: { get_resource: subnet1 }

outputs:

  admin_floating_ip:
    description: Admin floating IP
    value: { get_attr: [ admin_server_public, floating_ip_address ] }

  admin_net1_ip:
    description: Admin net1 IP
    value: { get_attr: [ admin_server, networks, { get_param: net1_name }, 0 ] }

  app_server_1_ip:
    description: App server 1 IP
    value: { get_attr: [ app_server_1, app_server ] }
  app_server_2_ip:
    description: App server 2 IP
    value: { get_attr: [ app_server_2, app_server ] }
  app_server_3_ip:
    description: App server 3 IP
    value: { get_attr: [ app_server_3, app_server ] }

  db_server_ip:
    description: DB private IP
    value: { get_attr: [ db_server, first_address ] }

  admin_private_key:
    description: Generated keypair
    value: { get_attr: [ keypair, private_key ] }

