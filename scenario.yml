heat_template_version: 2017-02-24

description: pFinalCNVR

parameters:

  public_net_name:
      type: string
      default: ExtNet
      description: Red publica

  private_net_name: 
      type: string 
      description: red privada 1

  private_subnet_name: 
      type: string 
      description: subred privada 1
  private_subnet_ip_prefix: 
      type: string 
      description: prefijo de la subred privada 1

  private_subnet_gateway: 
    type: string 
    description: Pasarela de la subred privada 1

  private_net_2_name: 
    type: string 
    description: Nombre de la red privada 2

  private_subnet_2_name: 
    type: string 
    description: Nombre de la subred privada 2

  private_subnet_2_ip_prefix: 
    type: string 
    description: CIDR de la subred privada 2

  db_server_ip_address:
    type: string
    description: Direccion ip servidor de base de datos

  

resources:
  open_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: open
      description: Deja pasar todo el trafico este-oeste
      rules: [
        {remote_ip_prefix: 0.0.0.0/0}]

  clave_generada:
    type: OS::Nova::KeyPair
    properties:
      name: clave_generada
      save_private_key: true

  admin_server:
    type: OS::Nova::Server
    depends_on: [ clave_generada ]
    properties:
      name: admin_server
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      user_data_format: SOFTWARE_CONFIG
      user_data: { get_file: cloud-init/admin.yaml }
      key_name: { get_resource: clave_generada }
      networks:
        - port: { get_resource: admin_server_port0 }
        - port: { get_resource: admin_server_port1 }

  admin_server_port0:
    type: OS::Neutron::Port
    depends_on: [ open_security_group ]
    properties:
      network_id: { get_resource: private_net }
      security_groups:
        - open
      fixed_ips:
       #- subnet_id: { get_resource: private_subnet }
        - ip_address: 10.100.0.10

  admin_server_port1:
    type: OS::Neutron::Port
    depends_on: [ open_security_group ]
    properties:
      network_id: { get_resource: private_net_2 }
      security_groups:
        - open
      fixed_ips:
        - subnet_id: { get_resource: private_subnet_2 }

  admin_server_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_name }
      port_id: { get_resource: admin_server_port0 }

  app_server_1:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_1
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
      
  app_server_2:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_2
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
      
  app_server_3:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_3
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
      
  db_server:
    type: db_server.yaml
    depends_on: [ private_net_2, private_subnet_2 ]
    properties:
      server_name: db_server
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
      private_ip_address: { get_param: db_server_ip_address }

  private_net: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: private_net_name }

  private_subnet: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: private_subnet_name }
      network_id: { get_resource: private_net }
      cidr: { get_param: private_subnet_ip_prefix }
      gateway_ip: { get_param: private_subnet_gateway }

  private_net_2: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: private_net_2_name }

  private_subnet_2: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: private_subnet_2_name }
      network_id: { get_resource: private_net_2 }
      cidr: { get_param: private_subnet_2_ip_prefix }

  mi_router:
    type: OS::Neutron::Router
    properties:
      name: mi_router
      external_gateway_info: 
        network: { get_param: public_net_name }

  interfaz_router:
    type: OS::Neutron::RouterInterface
    depends_on: [ mi_router ]
    properties:
      router: { get_resource: mi_router }
      subnet: { get_resource: private_subnet }

outputs:

  admin_server_public_ip:
    description: IP flotante externa de la maquina
    value: { get_attr: [ admin_server_public, floating_ip_address ] }

  admin_server_private_ip_net1:
    description: Direccion IP en la red privada 1 de la maquina
    value: { get_attr: [ admin_server, networks, { get_param: private_net_name }, 0 ] }

 

  app_server_1_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ app_server_1, app_server ] }
  app_server_2_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ app_server_2, app_server ] }
  app_server_3_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ app_server_3, app_server ] }

  db_server_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ db_server, first_address ] }

  admin_private_key:
    description: Clave privada clave_generada
    value: { get_attr: [ clave_generada, private_key ] }

